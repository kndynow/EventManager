@inject AuthenticationStateProvider AuthStateProvider
@inject NavigationManager Navigation
@using Microsoft.AspNetCore.Components.Authorization

<CascadingAuthenticationState>
	<Router AppAssembly="@typeof(App).Assembly">
		<Found Context="routeData">
			<AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" />
		</Found>
		<NotFound>
			<PageTitle>Not found</PageTitle>
			<LayoutView Layout="@typeof(MainLayout)">
				<p role="alert">Sorry, there's nothing at this address.</p>
			</LayoutView>
		</NotFound>
	</Router>
</CascadingAuthenticationState>

@* @code {
	protected override async Task OnInitializedAsync()
	{
		var authState = await AuthStateProvider.GetAuthenticationStateAsync();
		var user = authState.User;

		if (!user.Identity.IsAuthenticated)
		{
			Navigation.NavigateTo("/login"); // Redirect to login
		}
	}
} *@
